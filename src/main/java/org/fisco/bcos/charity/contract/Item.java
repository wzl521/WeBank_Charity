package org.fisco.bcos.charity.contract;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.fisco.bcos.channel.client.TransactionSucCallback;
import org.fisco.bcos.web3j.abi.FunctionReturnDecoder;
import org.fisco.bcos.web3j.abi.TypeReference;
import org.fisco.bcos.web3j.abi.datatypes.Function;
import org.fisco.bcos.web3j.abi.datatypes.Type;
import org.fisco.bcos.web3j.abi.datatypes.Utf8String;
import org.fisco.bcos.web3j.abi.datatypes.generated.Int256;
import org.fisco.bcos.web3j.crypto.Credentials;
import org.fisco.bcos.web3j.protocol.Web3j;
import org.fisco.bcos.web3j.protocol.core.RemoteCall;
import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;
import org.fisco.bcos.web3j.tuples.generated.Tuple1;
import org.fisco.bcos.web3j.tuples.generated.Tuple5;
import org.fisco.bcos.web3j.tuples.generated.Tuple6;
import org.fisco.bcos.web3j.tuples.generated.Tuple9;
import org.fisco.bcos.web3j.tx.Contract;
import org.fisco.bcos.web3j.tx.TransactionManager;
import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;
import org.fisco.bcos.web3j.tx.txdecode.TransactionDecoder;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version none.
 */
@SuppressWarnings("unchecked")
public class Item extends Contract {
    public static final String[] BINARY_ARRAY = {"","","","1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825285818151815260200191508051906020019080838360005b83811015612e45578082015181840152602081019050612e2a565b50505050905090810190601f168015612e725780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b158015612e9357600080fd5b505af1158015612ea7573d6000803e3d6000fd5b505050506040513d6020811015612ebd57600080fd5b81019080805190602001909291905050509050809450505050509998505050505050505050565b6000606080606060008060006060806060600080612f00613c29565b96508673ffffffffffffffffffffffffffffffffffffffff1663e8434e398e8973ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015612f8357600080fd5b505af1158015612f97573d6000803e3d6000fd5b505050506040513d6020811015612fad57600080fd5b81019080805190602001909291905050506040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b8381101561305b578082015181840152602081019050613040565b50505050905090810190601f1680156130885780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b1580156130a857600080fd5b505af11580156130bc573d6000803e3d6000fd5b505050506040513d60208110156130d257600080fd5b810190808051906020019092919050505095506040805190810160405280600481526020017f6e756c6c0000000000000000000000000000000000000000000000000000000081525094506040805190810160405280600481526020017f6e756c6c0000000000000000000000000000000000000000000000000000000081525093506040805190810160405280600481526020017f6e756c6c000000000000000000000000000000000000000000000000000000008152509250600091508573ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156131f557600080fd5b505af1158015613209573d6000803e3d6000fd5b505050506040513d602081101561321f57600080fd5b81019080805190602001909291905050506000141561326f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff858585858494509b509b509b509b509b506137a6565b8573ffffffffffffffffffffffffffffffffffffffff1663846719e060006040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b1580156132df57600080fd5b505af11580156132f3573d6000803e3d6000fd5b505050506040513d602081101561330957600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018281038252600e8152602001807f7075626c69736865725f6e616d65000000000000000000000000000000000000815250602001915050600060405180830381600087803b1580156133bc57600080fd5b505af11580156133d0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156133fa57600080fd5b81019080805164010000000081111561341257600080fd5b8281019050602081018481111561342857600080fd5b815185600182028301116401000000008211171561344557600080fd5b505092919050505094508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260098152602001807f6974656d5f6e616d650000000000000000000000000000000000000000000000815250602001915050600060405180830381600087803b1580156134ef57600080fd5b505af1158015613503573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561352d57600080fd5b81019080805164010000000081111561354557600080fd5b8281019050602081018481111561355b57600080fd5b815185600182028301116401000000008211171561357857600080fd5b505092919050505093508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260108152602001807f62656e65666963696172795f6e616d6500000000000000000000000000000000815250602001915050600060405180830381600087803b15801561362257600080fd5b505af1158015613636573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561366057600080fd5b81019080805164010000000081111561367857600080fd5b8281019050602081018481111561368e57600080fd5b81518560018202830111640100000000821117156136ab57600080fd5b505092919050505092508073ffffffffffffffffffffffffffffffffffffffff1663fda69fae6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018281038252600d8152602001807f7461726765745f616d6f756e7400000000000000000000000000000000000000815250602001915050602060405180830381600087803b15801561375557600080fd5b505af1158015613769573d6000803e3d6000fd5b505050506040513d602081101561377f57600080fd5b810190808051906020019092919050505091506000858585858494509b509b509b509b509b505b5050505050505091939590929450565b60008060008060008093506137c9613c29565b92508273ffffffffffffffffffffffffffffffffffffffff1663e8434e39878573ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561384c57600080fd5b505af1158015613860573d6000803e3d6000fd5b505050506040513d602081101561387657600080fd5b81019080805190602001909291905050506040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180806020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828103825284818151815260200191508051906020019080838360005b83811015613924578082015181840152602081019050613909565b50505050905090810190601f1680156139515780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561397157600080fd5b505af1158015613985573d6000803e3d6000fd5b505050506040513d602081101561399b57600080fd5b810190808051906020019092919050505091508173ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015613a1257600080fd5b505af1158015613a26573d6000803e3d6000fd5b505050506040513d6020811015613a3c57600080fd5b810190808051906020019092919050505060001415613a7d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9450613c20565b8173ffffffffffffffffffffffffffffffffffffffff1663846719e060006040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b158015613aed57600080fd5b505af1158015613b01573d6000803e3d6000fd5b505050506040513d6020811015613b1757600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff1663e942b5166040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200180602001838103835260068152602001807f7374617475730000000000000000000000000000000000000000000000000000815250602001838103825260098152602001807f63616e63656c6c6564000000000000000000000000000000000000000000000081525060200192505050600060405180830381600087803b158015613c0357600080fd5b505af1158015613c17573d6000803e3d6000fd5b50505050600094505b50505050919050565b600080600061100191508173ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825260068152602001807f745f6974656d0000000000000000000000000000000000000000000000000000815250602001915050602060405180830381600087803b158015613cd357600080fd5b505af1158015613ce7573d6000803e3d6000fd5b505050506040513d6020811015613cfd57600080fd5b810190808051906020019092919050505090508092505050905600a165627a7a7230582093ca04b54ce67b1f9550b2918097317aa84af5395640b12b59f7ec7ba298e6d70029"};

    public static final String BINARY = String.join("", BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":true,\"inputs\":[{\"name\":\"item_id\",\"type\":\"string\"}],\"name\":\"pushItem\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"item_id\",\"type\":\"string\"}],\"name\":\"getItem1\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"item_id\",\"type\":\"string\"},{\"name\":\"publisher_name\",\"type\":\"string\"},{\"name\":\"item_name\",\"type\":\"string\"},{\"name\":\"beneficiary_name\",\"type\":\"string\"},{\"name\":\"target_amount\",\"type\":\"int256\"},{\"name\":\"description\",\"type\":\"string\"}],\"name\":\"registerItem\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"item_id\",\"type\":\"string\"},{\"name\":\"publisher_name\",\"type\":\"string\"},{\"name\":\"item_name\",\"type\":\"string\"},{\"name\":\"beneficiary_name\",\"type\":\"string\"},{\"name\":\"target_amount\",\"type\":\"int256\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"donation_amount\",\"type\":\"int256\"},{\"name\":\"num_of_donation\",\"type\":\"int256\"},{\"name\":\"status\",\"type\":\"string\"}],\"name\":\"updateItem\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"item_id\",\"type\":\"string\"}],\"name\":\"getItem0\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"item_id\",\"type\":\"string\"}],\"name\":\"cancelItem\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]"};

    public static final String ABI = String.join("", ABI_ARRAY);

    public static final TransactionDecoder transactionDecoder = new TransactionDecoder(ABI, BINARY);

    public static final String FUNC_PUSHITEM = "pushItem";

    public static final String FUNC_GETITEM1 = "getItem1";

    public static final String FUNC_REGISTERITEM = "registerItem";

    public static final String FUNC_UPDATEITEM = "updateItem";

    public static final String FUNC_GETITEM0 = "getItem0";

    public static final String FUNC_CANCELITEM = "cancelItem";

    @Deprecated
    protected Item(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Item(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Item(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Item(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static TransactionDecoder getTransactionDecoder() {
        return transactionDecoder;
    }

    public RemoteCall<BigInteger> pushItem(String item_id) {
        final Function function = new Function(FUNC_PUSHITEM, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(item_id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<Tuple5<BigInteger, String, BigInteger, BigInteger, String>> getItem1(String item_id) {
        final Function function = new Function(FUNC_GETITEM1, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(item_id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple5<BigInteger, String, BigInteger, BigInteger, String>>(
                new Callable<Tuple5<BigInteger, String, BigInteger, BigInteger, String>>() {
                    @Override
                    public Tuple5<BigInteger, String, BigInteger, BigInteger, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<BigInteger, String, BigInteger, BigInteger, String>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (BigInteger) results.get(3).getValue(), 
                                (String) results.get(4).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> registerItem(String item_id, String publisher_name, String item_name, String beneficiary_name, BigInteger target_amount, String description) {
        final Function function = new Function(
                FUNC_REGISTERITEM, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(item_id), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(publisher_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(item_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(beneficiary_name), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Int256(target_amount), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(description)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void registerItem(String item_id, String publisher_name, String item_name, String beneficiary_name, BigInteger target_amount, String description, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_REGISTERITEM, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(item_id), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(publisher_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(item_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(beneficiary_name), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Int256(target_amount), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(description)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String registerItemSeq(String item_id, String publisher_name, String item_name, String beneficiary_name, BigInteger target_amount, String description) {
        final Function function = new Function(
                FUNC_REGISTERITEM, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(item_id), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(publisher_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(item_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(beneficiary_name), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Int256(target_amount), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(description)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public Tuple6<String, String, String, String, BigInteger, String> getRegisterItemInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_REGISTERITEM, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;
        return new Tuple6<String, String, String, String, BigInteger, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue(), 
                (String) results.get(3).getValue(), 
                (BigInteger) results.get(4).getValue(), 
                (String) results.get(5).getValue()
                );
    }

    public Tuple1<BigInteger> getRegisterItemOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_REGISTERITEM, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public RemoteCall<TransactionReceipt> updateItem(String item_id, String publisher_name, String item_name, String beneficiary_name, BigInteger target_amount, String description, BigInteger donation_amount, BigInteger num_of_donation, String status) {
        final Function function = new Function(
                FUNC_UPDATEITEM, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(item_id), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(publisher_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(item_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(beneficiary_name), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Int256(target_amount), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(description), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Int256(donation_amount), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Int256(num_of_donation), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(status)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void updateItem(String item_id, String publisher_name, String item_name, String beneficiary_name, BigInteger target_amount, String description, BigInteger donation_amount, BigInteger num_of_donation, String status, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_UPDATEITEM, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(item_id), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(publisher_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(item_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(beneficiary_name), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Int256(target_amount), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(description), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Int256(donation_amount), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Int256(num_of_donation), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(status)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String updateItemSeq(String item_id, String publisher_name, String item_name, String beneficiary_name, BigInteger target_amount, String description, BigInteger donation_amount, BigInteger num_of_donation, String status) {
        final Function function = new Function(
                FUNC_UPDATEITEM, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(item_id), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(publisher_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(item_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(beneficiary_name), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Int256(target_amount), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(description), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Int256(donation_amount), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Int256(num_of_donation), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(status)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public Tuple9<String, String, String, String, BigInteger, String, BigInteger, BigInteger, String> getUpdateItemInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATEITEM, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}, new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;
        return new Tuple9<String, String, String, String, BigInteger, String, BigInteger, BigInteger, String>(

                (String) results.get(0).getValue(), 
                (String) results.get(1).getValue(), 
                (String) results.get(2).getValue(), 
                (String) results.get(3).getValue(), 
                (BigInteger) results.get(4).getValue(), 
                (String) results.get(5).getValue(), 
                (BigInteger) results.get(6).getValue(), 
                (BigInteger) results.get(7).getValue(), 
                (String) results.get(8).getValue()
                );
    }

    public Tuple1<BigInteger> getUpdateItemOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_UPDATEITEM, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());;
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public RemoteCall<Tuple5<BigInteger, String, String, String, BigInteger>> getItem0(String item_id) {
        final Function function = new Function(FUNC_GETITEM0, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(item_id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}));
        return new RemoteCall<Tuple5<BigInteger, String, String, String, BigInteger>>(
                new Callable<Tuple5<BigInteger, String, String, String, BigInteger>>() {
                    @Override
                    public Tuple5<BigInteger, String, String, String, BigInteger> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<BigInteger, String, String, String, BigInteger>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue());
                    }
                });
    }

    public RemoteCall<BigInteger> cancelItem(String item_id) {
        final Function function = new Function(FUNC_CANCELITEM, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(item_id)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    @Deprecated
    public static Item load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Item(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Item load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Item(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Item load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Item(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Item load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Item(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Item> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Item.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<Item> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Item.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Item> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Item.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Item> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Item.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}